amznJQ.available("jQuery",function(){var $=jQuery;
$.searchUE=new function(){var ueActivityAllowed=false;
var ueDataEnabled=false;
var rid;
var origUet;
var scopeName=undefined;
var savedScopeInfo={};
var ueUrlPrefix="/gp/search/uedata/";
var sessionContext;
var firstMarkerScopedTimestamper=function(marker,scope,scopeOptions,timeOverride){var scopeTimes=ues("t",scope)||ues("t",scope,{});
if(scopeTimes[marker]===undefined){origUet(marker,scope,scopeOptions,timeOverride);
if(sessionContext.debugEnabled){scopeTimes=ues("t",scope);
$.searchUE.debug("Recorded:",marker,(scopeTimes[marker]-ues("t0",scope)),scope);
}}};
var isUEDataEnabled=function(){return ueDataEnabled;
};
var setUEActivity=function(ueActivityFlag){ueActivityAllowed=ueActivityFlag;
};
var isUEActivityAllowed=function(){return isUEDataEnabled()&&ueActivityAllowed;
};
var updateRid=function(newRid){if(!isUEActivityAllowed()){return;
}ues("id",scopeName,newRid);
if(sessionContext.updateUeVars==1){ue.id=ue.rid=newRid;
}else{if(sessionContext.updateUeVars==2){ue.id=ue.rid=newRid;
ue.t0=savedScopeInfo[scopeName].t0;
}}};
var updateUrl=function(sid){if(!isUEActivityAllowed()){return;
}ue.url=ueUrlPrefix+sid;
$.searchUE.info("UE: url updated to : "+ue.url);
};
var prepareForNewPageLoad=function(suppressUeVarsUpdate){if(!isUEActivityAllowed()){return;
}updateT0(scopeName,suppressUeVarsUpdate);
};
var manageLoad=function(){if(!isUEActivityAllowed()){return;
}var scopeTimes=ues("t",scopeName)||ues("t",scopeName,{});
var scopeRid=ues("id",scopeName);
var scopeT0=ues("t0",scopeName);
$.searchUE.info("UE: Checking if load UEData can be sent. Markers : "+scopeTimes.tc+" "+scopeT0+" "+scopeTimes.af+" "+scopeTimes.cf+" "+scopeRid+" "+scopeName);
if(areAllDefined([scopeT0,scopeTimes.af,scopeTimes.cf,scopeRid])){uex("ld",scopeName);
}};
var areAllDefined=function(values){for(var i=0;
i<values.length;
i++){if(values[i]==undefined){return false;
}}return true;
};
var init=function(context){ueDataEnabled=context.ueDataEnabled;
sessionContext=context;
if(ueDataEnabled){origUet=window.uet;
window.uet=firstMarkerScopedTimestamper;
}};
var update=function(context){sessionContext=context;
return;
};
var isAtfRecorded=function(){if(!isUEActivityAllowed()){return false;
}return window.ue&&window.ue.sc&&window.ue.sc[scopeName]&&window.ue.sc[scopeName].t&&window.ue.sc[scopeName].t.af!=undefined;
};
var updateT0=function(scopeName,suppressUeVarsUpdate){if(!isUEActivityAllowed()){return;
}var newT0=now();
if(!suppressUeVarsUpdate){if(sessionContext.updateUeVars==1){ue.t0=newT0;
}else{if(sessionContext.updateUeVars==2){savedScopeInfo[scopeName]={t0:newT0};
}}}ues("t0",scopeName,newT0);
};
var getScope=function(){return scopeName;
};
var setScope=function(newScopeName){scopeName=newScopeName;
};
var setClick=function(timeOverride){if(isUEActivityAllowed()){if(timeOverride){uet("tc",scopeName,{},timeOverride);
ues("ctb",undefined,"1");
ues("ctb",scopeName,"1");
}else{uet("tc",scopeName);
}}};
return{setUEActivity:setUEActivity,prepareForNewPageLoad:prepareForNewPageLoad,updateRid:updateRid,updateUrl:updateUrl,manageLoad:manageLoad,init:init,update:update,atfRecorded:isAtfRecorded,getScope:getScope,setScope:setScope,setClick:setClick};
};
});
amznJQ.available("jQuery",function(){amznJQ.available("page-ajax",function(){var $=jQuery;
$.searchUtils=new function(){var self=this;
this.context=undefined;
var pageUtils=$.pageUtils;
this.cacheName={"HISTORY":"History","PREDICTIVE":"Predictive","GEN_SESSION":"GenSession","GEN_REQUEST":"GenRequest"};
this.sectionName={"ATF":"ATF","BTF":"BTF","NONE":"NONE"};
this.pagere=/([?&=])(page=)(\d+)/;
this.sortre=/([?&=])(sort=)([-\w]+)/;
this.smre=/([?&=])(sma=)([\w]+)/;
this.keywordsre=/([?&=])(k|keywords|field-keywords)=([^&]*)/;
this.rhre=/([?&=])(rh=)([^&]*)/;
this.sepatfbtfre=/([?&=])(sepatfbtf=)([^&]*)/;
this.tcre=/([?&=])(tc=)([^&]*)/;
this.sfre=/([?&=])(sf=)([^&]*)/;
this.mere=/([?&=])(me=)([^&]*)/;
this.rhkeywordssubstre=/,k:([^,]*)/;
this.rhkeywordsre=/(^|,)(k:)([^,]*)/;
this.searchaliasre=/([?&=])(search\-alias|i)=([-\w]+)/;
this.nodere=/([?&=])(node|n)=(\d+)/;
this.urlre=/\/(b|browse|s|search)([?\/]\S*)/;
this.surlre=/\/(s|search)[\/?]/;
this.wikiurlre=/\/wiki\/\S*\?/;
this.urlbasere=/(\S*\/(?:b|browse|s|search))[\/?]/;
this.sectionre=/([?&])(section=)(\w+)/;
this.reloadre=/([?&])(reload=)(\w+)/;
this.emptysearchre=/^[|\s]*$/;
this.asindivre=/<div [^>]*result[^>]*name\s*=\s*\"[\S]*\"[^>]*>/gi;
this.asinre=/name=\"([\S]*?)\"/i;
this.init=function(context){$.each({"PageAjax":$.pageAjax,"PageUtils":$.pageUtils,"SearchAjax":$.searchAjax,"SearchUtils":$.searchUtils,"SearchLogger":$.searchLogger,"SearchUE":$.searchUE,"SearchPageCache":$.searchPageCache,"SearchSiteWide":$.searchSitewide},function(name,obj){$.each(["debug","info","error","warning","assertionFailure","track"],function(i,lvl){if(obj){obj[lvl]=function(){$.pageUtils.dbg(name,lvl,arguments);
};
}});
});
self=$.searchUtils;
self.context=context;
};
this.update=function(context){self.context=$.extend(self.context,context);
};
this.getPage=function(url){return parseInt(pageUtils.getPar(self.pagere,url))||1;
};
this.getSort=function(url){return pageUtils.getPar(self.sortre,url)||(self.context?self.context.defaultSort:"");
};
this.getSM=function(url){return pageUtils.getPar(self.smre,url)||"";
};
this.getKeywords=function(url){var words=pageUtils.getPar(self.keywordsre,url);
if(words){words=words.replace(pageUtils.commaEncoding.URI_REGEX,pageUtils.commaEncoding.RH_ENCODING);
}return words==undefined?"":words;
};
this.getRH=function(url){var rh=pageUtils.getPar(self.rhre,url)||(self.context?self.context.initRH||"":"");
return rh;
};
this.getSepAtfBtf=function(url){return pageUtils.getPar(self.sepatfbtfre,url);
};
this.removeSepAtfBtf=function(url){return pageUtils.removePar(self.sepatfbtfre,url);
};
this.getTC=function(url){return pageUtils.getPar(self.tcre,url);
};
this.removeTC=function(url){return pageUtils.removePar(self.tcre,url);
};
this.getRHParam=function(url,key){var rh=decodeURIComponent(self.getRH(url)),params=rh.split(","),len=params.length,vals=[];
for(var i=0;
i<len;
i++){var param=params[i].split(":");
if(param.length==2&&key==param[0]){var rhVals=param[1].replace(/\+/g," ").replace(/\\c/g,",").split("|");
vals=vals.concat(rhVals);
}}return vals;
};
this.getSF=function(url){return pageUtils.getPar(self.sfre,url)||"null";
};
this.getDisplaySize=function(){return self.context?(self.context.displaySize):null;
};
this.getKeywordsDisplay=function(str,extractre){var words=decodeURIComponent(str.replace(/\+/g," "));
if(extractre){words=pageUtils.getPar(extractre,words);
}if(words){words=words.replace(/\\c/g,",");
}return words==undefined?"":words;
};
this.isEmptySearch=function(keywords){keywords=self.getKeywordsDisplay(keywords);
return(keywords.match(self.emptysearchre)!=null);
};
this.prepareKeywordsForRH=function(kw){kw=encodeURIComponent(kw);
kw=kw.replace(/%2C/g,"\\c");
kw=kw.replace(/%20/g,"+");
return kw;
};
this.createEmptyPageInitRH=function(initHash){var rh="";
if(self.context&&self.context.searchAlias&&self.context.searchAlias.match(/aps/i)){rh=escape("i:aps");
}else{if(self.context&&self.context.node){rh=escape("n:")+self.context.node;
}}rh=rh+escape(",k:")+self.getKeywords(initHash);
return rh;
};
this.getSearchAlias=function(url){return pageUtils.getPar(self.searchaliasre,url);
};
this.getNode=function(url){return pageUtils.getPar(self.nodere,url);
};
this.hasSections=function(sections){return sections.length>0&&$.inArray(self.sectionName.NONE,sections)===pageUtils.NOTFOUND;
};
this.computeHash=function(url){return pageUtils.computeHash(url,self.urlre);
};
this.computeHashForUrl=function(url){return this.computeHash(url);
};
this.computeBase=function(url){return pageUtils.computeBase(url,self.urlbasere);
};
this.toSearchBase=function(url){if(url){var m=url.match(self.urlre);
if(m&&m.length==3){if(m[1]=="b"){return url.replace(self.urlre,"/s"+"$2");
}else{if(m[1]=="browse"){return url.replace(self.urlre,"/search"+"$2");
}}}}return url;
};
this.updateBrowseLadderMap=function(key,value){if(key&&value&&self.context.ladderMap){self.context.ladderMap[key]=value;
}};
this.computeBrowseLadderFromLadderMap=function(key){if(self.context.ladderMap){return self.context.ladderMap[key];
}return undefined;
};
this.computeBrowseLadder=function(department,isAlias){if(department){var ladder=self.computeBrowseLadderFromLadderMap(department);
if(!ladder){ladder=(isAlias)?"i:"+department:"n:"+department;
}return ladder;
}return undefined;
};
this.computeKeywordsRH=function(keywords,alias,node,merchant){var rhval=merchant?"":self.extractBrowseLadder();
var ladder;
if(alias){ladder=self.computeBrowseLadder(alias,true);
}else{if(node){ladder=self.computeBrowseLadder(node,false);
}}if(ladder){rhval=encodeURIComponent(ladder);
}if(keywords){rhval+=encodeURIComponent(",k:")+keywords;
}return rhval;
};
this.extractBrowseLadder=function(){var browseLadder=$("#refinements").attr("data-browseladder");
if(!browseLadder&&$.pageContext){browseLadder=$.pageContext.browseLadder;
}return browseLadder;
};
this.extractBaseRH=function(){var baserh=$("#refinements").attr("data-baserh");
if(!baserh&&$.pageContext){baserh=$.pageContext.baseRH;
}return baserh;
};
this.extractInitRH=function(){var initrh=self.context.initRH;
if(!initrh&&$.pageContext){initrh=$.pageContext.baseRH;
}return initrh;
};
this.hasSameBrowseLadder=function(rhA,rhB){var aMap=this.getRHNodesAsMap(rhA);
var bMap=this.getRHNodesAsMap(rhB);
return aMap.equals(bMap);
};
this.getRHNodesAsMap=function(rh){var aMap=new pageUtils.Map();
if(!rh){return aMap;
}var entries=rh.split(",");
if(entries.length>0){var entry,rhKey,rhValue;
for(var x=0;
x<entries.length;
x++){entry=entries[x].split(":");
if(entry.length==2){rhKey=entry[0];
rhValue=entry[1];
if((rhKey=="n"||rhKey=="i")&&rhValue.indexOf("!")==-1){aMap.put(rhValue,rhKey);
}}}}return aMap;
};
this.pageApp=function(){var pageApp=$(self.context.appDiv).attr("data-app");
if(!pageApp&&$.pageContext){pageApp=$.pageContext.pageApp;
}return pageApp;
};
this.pageStructure=function(){var pageStructure=$(self.context.appDiv).attr("data-page");
if(!pageStructure&&$.pageContext){pageStructure=$.pageContext.pageStructure;
}return pageStructure;
};
this.reconstructUrl=function(currHash){var url=self.context.initPageBaseUrl;
url+=pageUtils.normalizeHashForUrl(currHash?currHash:self.context.initPageHash);
return this.toSearchBase(url);
};
this.baseAjaxUrl=function(isPredictive){var protocol=location.protocol;
var hostname=location.hostname;
var port=location.port;
var appPath="/mn/search/ajax";
if((self.pageApp()!="gp/search"||self.pageStructure()!="results")&&self.context.gurupaAjaxAllowed&&!isPredictive){appPath="/gp/search/ajaxportal";
}return protocol+"//"+hostname+(port?":"+port:"")+appPath;
};
var customParams={};
this.registerCustomParam=function(param,val){if(typeof customParams[param]!="undefined"){return false;
}customParams[param]=val;
return true;
};
var addCustomParams=function(fromHash,currHash,url){var usedParams={};
var qs=url.replace(/.*\?/,"").split("&");
jQuery.each(qs,function(i,param){key=param.split("=")[0];
usedParams[key]=true;
});
jQuery.each(customParams,function(key,val){if(!usedParams[key]){if(typeof val=="function"){val=val(fromHash,currHash);
}if(typeof val!="undefined"&&val!==null&&val!==""){url+="&"+key+"="+val;
}}});
return url;
};
this.constructAjaxUrl=function(fromHash,currHash,sections,isPredictive){var url=this.baseAjaxUrl(isPredictive);
var hash=currHash||self.context.initPageHash||"";
hash=pageUtils.normalizeHashForUrl(hash);
url+=hash;
if(self.context.sai){url+="&sai="+self.context.sai;
}url+="&fromHash="+encodeURIComponent(fromHash);
if(self.context.initRH){url+=!fromHash?"&fromRH="+self.context.initRH:!currHash?"&currRH="+self.context.initRH:"";
}if(sections){url+="&section="+sections.join();
}url+="&fromApp="+encodeURIComponent(self.pageApp());
url+="&fromPage="+encodeURIComponent(self.pageStructure());
url+="&version=2";
url=addCustomParams(fromHash,currHash,url);
return url;
};
this.getContextualAjaxUrlParams=function(){var params={};
if(self.context.sai){params.sai=self.context.sai;
}return params;
};
this.isValidHash=function(hash){return hash===""||hash.match(this.rhre)||hash.match(this.mere);
};
this.precacheImages=function(data){var imgs=pageUtils.extractImgSrc(data);
if(imgs&&imgs.length){if($.browser.msie){var html="";
$.each(imgs,function(i,val){html+='<img src="'+val+'"/>';
self.debug("ie precache",val);
});
pageUtils.appendHiddenDiv("ajaxData","precachedATFImages");
$("#precachedATFImages").append(html);
}else{$.each(imgs,function(i,val){var imgObj=new Image();
imgObj.src=val;
self.debug("precache",val);
});
}}};
this.getAsins=function(srHtml){var asindivs=srHtml?srHtml.match(self.asindivre):null;
if(!asindivs){return[];
}var asins=[];
$.each(asindivs,function(){var m=this.match(self.asinre);
if(m&&m.length==2){asins.push(m[1]);
}});
return asins;
};
};
});
});
amznJQ.available("jQuery",function(){var $=jQuery;
$.searchLogger=new function(){this.clientID="sx";
this.clogLimit=undefined;
this.items={};
this.clientNS="client";
this.loggingEnabled=false;
this.setData=function(key,value){if(this.loggingEnabled&&window.clientLogger){this.items[key]=value;
}};
this.setElapsedData=function(key,initialTime){if(this.loggingEnabled&&window.clientLogger&&typeof initialTime=="number"){var elapsed=now()-initialTime;
this.items[key]=elapsed;
}};
this.flush=function(){if(!this.loggingEnabled||!window.clientLogger){this.info("flush","client logging disabled");
this.items={};
return;
}var clog=window.clientLogger;
var len=0;
var buf="";
var key;
var param;
for(key in this.items){param=escape(key)+"="+escape(this.items[key]);
if(len+param.length>this.clogLimit){this.info("flush",buf);
clog.sendPreparedCLOGEntry(this.clientID,this.clientNS,buf);
len=0;
buf="";
}if(len>0){len++;
buf+="&";
}len+=param.length;
buf+=param;
}if(len>0){this.info("flush",buf);
clog.sendPreparedCLOGEntry(this.clientID,this.clientNS,buf);
}this.items={};
};
this.init=function(context){var logger=this;
logger.loggingEnabled=context.clientLoggingEnabled;
if(logger.loggingEnabled){amznJQ.available("clientLog",function(){var clog=window.clientLogger;
clog.addDebugCallback(function(msg){});
logger.clogLimit=1921-clog.getBaseURL().length-clog.version.length-logger.clientID.length-logger.clientNS.length-clog.getMarketplaceID().length;
});
}};
this.updateRid=function(rid){if(this.clog){this.info("updateRid",rid);
window.clientLogger.getRequestID=function(){return rid;
};
}};
this.update=function(context){return;
};
};
});
amznJQ.available("jQuery",function(){amznJQ.available("page-ajax",function(){var $=jQuery;
$.searchPageCache=new function(){var keysortre=/^([^*]*)\*/;
var keypagere=/\*([^*]*)\*/;
var keyrhre=/\*[^*]*\*([^*]*)\*/;
var keysfre=/\*[^*]*\*[^*]*\*([^*]*)\*/;
var keydsre=/\*[^*]*\*[^*]*\*[^*]*\*([^*]*)$/;
var self;
var sessionContext;
var sUtils=$.searchUtils;
var pUtils=$.pageUtils;
var cacheContentLoader=function(){var ajaxRequestNum=0;
var requestKey;
var hash;
var buffer=[];
var dataFetcher=$.pageAjax;
var cacheEntry;
var postProcess;
var loadHash=function(currHash,predictMode,postProcessCallback,doNotIncludeTab){postProcess=postProcessCallback;
cacheEntry=getCacheEntry(buildCacheKey(hash));
if(!cacheEntry.entry){beginPredictiveEntry(hash);
var url=sUtils.constructAjaxUrl(currHash,hash,["ATF"],true,doNotIncludeTab);
url=url+"&ajp="+(predictMode||"true");
var requestKey=buildCacheKey(hash)+ajaxRequestNum+++"pred";
dataFetcher.loadStreaming(url,null,null,processResults,processError,requestKey);
return 1;
}return 0;
};
var load=function(currHash,hashOrOverrides,predictMode,postProcessCallback,doNotIncludeTab){hash=(typeof hashOrOverrides==="string")?hashOrOverrides:pUtils.buildHash(hashOrOverrides);
return loadHash(currHash,predictMode,postProcessCallback,doNotIncludeTab);
};
var processResults=function(callContext,pagelet,loadingStatus){if(pagelet.trackingInfo){if(pagelet.trackingInfo.isUnsupportedRequest){self.debug("processResults","isUnsupportedRequest",loadingStatus);
cacheEntry=getCacheEntry(buildCacheKey(hash));
if(cacheEntry&&cacheEntry.entry){cacheEntry.entry.unsupported=true;
performCacheCallback(cacheEntry,pUtils.reasonCode.NOT_SUPPORTED);
}return{"handlerCode":pUtils.handlerCode.IGNORE};
}else{return{"handlerCode":pUtils.handlerCode.OK};
}}var savedArgs={callContext:callContext,pagelet:pagelet,loadingStatus:loadingStatus};
buffer.push(savedArgs);
if(loadingStatus==pUtils.ajaxReadyState.DONE){var contents=[];
var callArgs;
var bufLen=buffer.length;
for(var i=0;
i<bufLen;
i++){callArgs=buffer[i];
var contentToSave=callArgs.pagelet[pUtils.getKeys(callArgs.pagelet)[0]];
contents.push(contentToSave);
}if(postProcess){contents=postProcess(contents);
}cacheEntry=storeContent(hash,null,contents,true);
performCacheCallback(cacheEntry,pUtils.reasonCode.NONE);
}return{"handlerCode":pUtils.handlerCode.OK};
};
var processError=function(callContext,pagelet,loadingStatus){deleteKey(hash);
performCacheCallback(cacheEntry,pUtils.reasonCode.CLIENT_FATAL);
self.debug("processError",loadingStatus);
return{"handlerCode":pUtils.handlerCode.ABORT};
};
var printStats=function(){return"The Cache Content Loader Object for "+hash;
};
return{load:load,printStats:printStats};
};
var historyCache=new $.pageCache(sUtils.cacheName.HISTORY,[sUtils.sectionName.ATF,sUtils.sectionName.BTF]);
var predictiveCache=new $.pageCache(sUtils.cacheName.PREDICTIVE,[sUtils.sectionName.ATF]);
var genSessionCache=new $.pageCache(sUtils.cacheName.GEN_SESSION,[sUtils.sectionName.NONE]);
var genRequestCache=new $.pageCache(sUtils.cacheName.GEN_REQUEST,[sUtils.sectionName.NONE]);
var init=function(context){self=$.searchPageCache;
self.sessionContext=context;
};
var update=function(context){self.sessionContext=$.extend(self.sessionContext,context);
};
var clearHistoryCache=function(){historyCache.clear();
};
var clearPredictiveCache=function(){predictiveCache.clear();
genRequestCache.clear();
};
var getCacheEntry=function(key,cacheToUse){var cache=!cacheToUse?historyCache:cacheToUse;
var cacheEntry=cache.getEntry(key);
if(!cacheEntry&&!cacheToUse){cache=predictiveCache;
cacheEntry=cache.getEntry(key);
}return{"entry":cacheEntry,"cache":(!cacheEntry?undefined:cache)};
};
var getContentViaCallBack=function(h,callback){var key=buildCacheKey(h);
self.debug("getContentViaCallBack",key);
var cacheEntry=getCacheEntry(key);
var entry=cacheEntry.entry;
if(entry){entry.callback=callback;
performCacheCallback(entry,pUtils.reasonCode.NONE);
}return entry?true:false;
};
var getContent=function(h){var key=buildCacheKey(h);
self.debug("getContent",key);
var cacheEntry=getCacheEntry(key);
return cacheEntry.entry?cacheEntry.entry.content:[];
};
var getGeneralContent=function(url,clientId,isRequestScope){var key=buildCacheKey(url)+"-"+clientId;
self.debug("getGeneralContent for:",key,"from",(isRequestScope?"GEN_REQUEST":"GEN_SESSION"));
var cache=isRequestScope?genRequestCache:genSessionCache;
var cacheEntry=getCacheEntry(key,cache);
return cacheEntry.entry?cacheEntry.entry.content:[];
};
var deleteKey=function(h){var key=buildCacheKey(h);
self.debug("deleteKey",key);
var cacheEntry=getCacheEntry(key);
if(cacheEntry.entry){cacheEntry.cache.deleteKey(key);
}};
var performCacheCallback=function(entry,reloadCode){self.debug("performCacheCallback");
if(entry&&entry.callback&&(entry.ready||reloadCode!=pUtils.reasonCode.NONE)){reloadCode=entry.unsupported?pUtils.reasonCode.NOT_SUPPORTED:reloadCode;
entry.callback(entry.content,reloadCode);
entry.callback=undefined;
}};
var beginPredictiveEntry=function(h){predictiveCache.initCacheEntry(buildCacheKey(h));
};
var getCachedSections=function(h){var key=buildCacheKey(h);
self.debug("getCachedSections",key);
var cacheEntry=getCacheEntry(key);
var cache=cacheEntry.cache;
var cachedSections={"cache":"","sections":[sUtils.sectionName.NONE]};
if(cacheEntry.entry){cachedSections.cache=cache.getName();
cachedSections.sections=cache.getSections();
}return cachedSections;
};
var storeContent=function(h,overrides,contents,isPredictive){var key=buildCacheKey(h,overrides);
var cache=isPredictive?predictiveCache:historyCache;
var cacheEntry=getCacheEntry(key);
var firstWrite=true;
if(cacheEntry.cache&&!cacheEntry.entry.ready){firstWrite=false;
}var len=contents.length;
self.debug("storeContent",(isPredictive?"PRED":"HIST"),("Key="+key),("firstWrite="+firstWrite));
for(var i=0;
i<len;
i++){cacheEntry=cache.write(key,contents[i],firstWrite);
firstWrite=false;
}cacheEntry.ready=true;
return cacheEntry;
};
var storeGeneralContent=function(url,overrides,clientId,contents,isRequestScope){var key=buildCacheKey(url,overrides)+"-"+clientId;
var cache=isRequestScope?genRequestCache:genSessionCache;
var cacheEntry=getCacheEntry(key,cache);
var firstWrite=true;
if(cacheEntry.cache&&!cacheEntry.entry.ready){firstWrite=false;
}var len=contents.length;
self.debug("storeContent",(isRequestScope?"GEN_REQUEST":"GEN_SESSION"),("Key="+key),("firstWrite="+firstWrite));
for(var i=0;
i<len;
i++){cacheEntry=cache.write(key,contents[i],firstWrite);
firstWrite=false;
}cacheEntry.ready=true;
return cacheEntry;
};
var buildCacheKey=function(h,overrides){var hrh=h;
if(!h){h=self.sessionContext.initPageHash;
hrh="";
}var sort=(overrides&&overrides.sort)?overrides.sort:sUtils.getSort(h),page=(overrides&&overrides.page)?overrides.page:sUtils.getPage(h),rh=(overrides&&overrides.rh)?overrides.rh:sUtils.getRH(hrh),sf=(overrides&&overrides.sf)?overrides.sf:sUtils.getSF(h),ds=(overrides&&overrides.resize)?overrides.resize:sUtils.getDisplaySize(),sm=(overrides&&overrides.sm)?overrides.sm:sUtils.getSM(h);
rh=rh&&rh.replace(/(%20|\s)/g,"+");
return sort+"*"+page+"*"+rh+"*"+sf+"*"+ds+"*"+sm;
};
var deconstructCacheKey=function(key){var sort=pUtils.getGroup(keysortre,key),page=pUtils.getGroup(keypagere,key),rh=pUtils.getGroup(keyrhre,key),sf=pUtils.getGroup(keysfre,key),ds=pUtils.getGroup(keydsre,key);
return{"sort":sort,"page":page,"rh":rh,"sf":sf,"ds":ds};
};
var loadPredictiveContent=function(currHash,rhOverrideList,predictMode,postCacheCallback,doNotIncludeTab){var numLoadedEntries=0;
if(rhOverrideList&&rhOverrideList.length){var len=rhOverrideList.length;
var rhOverride;
for(var i=0;
i<len;
i++){rhOverride=rhOverrideList[i];
if(rhOverride){var loader=new cacheContentLoader();
numLoadedEntries+=loader.load(currHash,rhOverride,predictMode,postCacheCallback,doNotIncludeTab);
}}}return numLoadedEntries;
};
var printStats=function(){return predictiveCache.printStats()+historyCache.printStats();
};
return{clearHistoryCache:clearHistoryCache,clearPredictiveCache:clearPredictiveCache,getCacheKey:buildCacheKey,getCacheKeyParts:deconstructCacheKey,getCachedSections:getCachedSections,getContent:getContent,getContentViaCallBack:getContentViaCallBack,init:init,loadPredictiveContent:loadPredictiveContent,printStats:printStats,storeContent:storeContent,update:update,storeGeneralContent:storeGeneralContent,getGeneralContent:getGeneralContent};
};
});
});
amznJQ.available("jQuery",function(){amznJQ.available("page-ajax",function(){var $=jQuery;
$.searchSitewide=new function(){var self;
var ph;
var pa;
var sUtils;
var pUtils;
var sessionContext={loaded:false,debug:false};
var spinnerSkeleton="<div id='main' style='margin-left:50%;margin-top:8px;'><div id='center'/><div id='centerBelow'/></div>";
this.init=function(context){self=$.searchSitewide;
ph=$.pageHooks;
pa=$.pageAjax;
sUtils=$.searchUtils;
pUtils=$.pageUtils;
sessionContext=$.extend(context,sessionContext);
$(sessionContext.appDiv).attr("data-app",sessionContext.dataApp).attr("data-page",sessionContext.dataPage);
sUtils.update({appDiv:context.appDiv});
};
this.isLoaded=function(){return sessionContext.loaded;
};
this.requestHandler=function(e,fromHash,currHash){if(!sessionContext.loaded){sessionContext.loaded=true;
clearContentsAndShowSpinner();
self.debug("requestHandler:load");
}};
var clearContentsAndShowSpinner=function(){$("body > :not("+sessionContext.bodyContentsToKeep+")").empty().remove();
$("head > :not("+sessionContext.headContentsToKeep+")").empty().remove();
$.each(sessionContext.css,function(index,value){if(value){pUtils.loadCss(value);
}});
var css="<style type='text/css'>";
css=css+".srSprite { background-image: url('"+sessionContext.sprite+"'); }";
css=css+".loadingSpinner { background-image: url('"+sessionContext.loadingSpinner+"'); background-repeat: no-repeat; }";
css=css+"</style>";
pUtils.insertCss(css);
$(sessionContext.appDiv).html(spinnerSkeleton);
};
this.debug=function(){var str="",i=arguments.length;
while(i-->0){str=arguments[i]+(str?" ":"")+str;
}str="SiteWide: "+str;
if(window.goN2Debug){;
}if(window.console&&window.console.log){console.log(str);
}};
};
});
});
amznJQ.available("jQuery",function(){amznJQ.available("search-js-autocomplete",function(){amznJQ.available("search-js-general",function(){amznJQ.available("page-ajax",function(){amznJQ.available("ph",function(){var $=jQuery;
$.searchAjax=new function(){var pa;
var ph;
var updateDone;
var phQueue;
var sCache;
var pUtils;
var sUtils;
var sLogger;
var sUE;
var sw;
var self;
var sectionDivsToHide={ATF:"#center",BTF:"#centerBelow, #centerBelowExtra, #footer"};
var otherDivsToHide="#top, #leftNav";
var sections=["ATF","BTF"];
var spinner=$("<div class='loadingSpinner'>&nbsp;</div>");
var spinnerWidth=52;
var spinnerHeight=152;
var PredictiveDivsConfig=[{id:"result-count-only-next"},{id:"featuredEntity-next",js:["$('#featuredEntity:empty').remove();"]},{id:"didYouMean-next",js:["$('#didYouMean:empty').remove();"]},{id:"quartsOptin-next",js:["$('#quartsOptin:empty').remove();"]},{id:"quartsPagelet-next",js:["$('#quartsPagelet:empty').remove();"]},{id:"bestRefinement-next",js:["$('#bestRefinement:empty').remove();"]},{id:"results-atf-next",js:["$('#center').show();","$.searchAjax.ATFLoaded();"]},{id:"results-atf-image-rotation-next"}];
var PredictiveRegionsConfig=[{id:"ajaxData"}];
var PredictiveConfig={divs:PredictiveDivsConfig,regions:PredictiveRegionsConfig};
var PageRegionsConfig=[{id:"top",js:["$('#top').css('visibility', 'visible');"]},{id:"center",js:["$('#center').show();","$.searchAjax.finalizeHistoryATF();"]},{id:"FOLD"},{id:"centerBelow",js:["$('#centerBelow').show();"]},{id:"leftNav",js:["$('#leftNav').css('visibility', 'visible')"]},{id:"centerBelowExtra",js:["$('#centerBelowExtra').show();"]},{id:"ajaxData"}];
var supportedPages=["results","fkmr-results","corr-results","no-results","language-translated-results"];
var sessionContext={};
var addToSessionContext=function(){var initPageUrl=pUtils.removeHash(location.href);
return{debugEnabled:typeof(goN2Debug)!="undefined"&&typeof(goN2Debug.debug)=="function",ajaxDebugEnabled:$.searchAjaxDebug!=undefined,ueDataEnabled:window.ue&&typeof(uet)=="function"&&typeof(uex)=="function",initPageUrl:initPageUrl,initPageBaseUrl:sUtils.computeBase(location.href),initPageHash:sUtils.computeHash(initPageUrl),initRH:sUtils.extractBaseRH(),canPrefetch:true,displaySize:pUtils.getInitialDisplaySize()};
};
var ajaxRequestNum=0;
var scopeNamePrefix="searchAjax";
var jqOnReady=amznJQ.onReady;
var jqOnReadyArgs=[];
var requestContext={};
var issModel={};
var predictionModel={};
var clickModel={};
function searchBar(){return $("#twotabsearchtextbox");
}function initStarter(context){self=$.searchAjax;
ph=$.pageHooks;
updateDone=true;
phQueue=[];
pa=$.pageAjax;
sCache=$.searchPageCache;
pUtils=$.pageUtils;
sUtils=$.searchUtils;
sLogger=$.searchLogger;
sUE=$.searchUE;
sw=$.searchSitewide;
sessionContext=$.extend(sessionContext,addToSessionContext(),context);
var dbgContext=pUtils.getPar(pUtils.ajaxre,pUtils.getPar(pUtils.debugre,location.search));
if(dbgContext&&sessionContext.intReq){try{dbgContext=eval("("+decodeURIComponent(dbgContext)+")");
}catch(e){self.debug("Invalid debug ajax value");
}sessionContext=$.extend(sessionContext,dbgContext);
}ph.bind(self.requestHandler);
pUtils.init(sessionContext);
sUtils.init(sessionContext);
$.ajaxMissingDivs=new pUtils.Map();
$.pageUpdateJsonData={};
sLogger.init(sessionContext);
sUE.init(sessionContext);
sCache.init(sessionContext);
if(!$.pageContext.node){sessionContext.navHasGatewaySubnav=pUtils.navIsSubnavShown();
}$.pageContext.navUpdate=pUtils.getStartingNavUpdate();
pa.init(sessionContext);
if(sUtils.pageStructure()==="page-minus-results"){var i=location.href.indexOf("#");
var currHash=(i==-1)?"":location.href.substring(i+1);
var sepAtfBtf=sUtils.getSepAtfBtf(currHash)==="true";
if(sepAtfBtf){var override={rh:sUtils.getRH(currHash)};
sCache.loadPredictiveContent(undefined,[override],"iss",postProcessPredictive,true);
}}if(sessionContext.debugEnabled){sessionContext.debug=function(){var str="",i=arguments.length;
while(i-->0){str=arguments[i]+(str?" ":"")+str;
}str="PageHooks: "+str;
if(window.goN2Debug){;
}if(window.console&&window.console.log){console.log(str);
}};
}}function initFinalizer(){ph.init(sessionContext);
searchBar().bind("paste",function(e){setTimeout(function(){predictPaste(e);
},1);
});
if(sessionContext.cp){$(window).bind("cp",predictClick);
}sessionContext.initialized=true;
}this.init=function(context){initStarter(context);
if(sUtils.pageStructure()!="page-minus-results"){initFinalizer();
}else{amznJQ.available("pageMinusResultsBody",initFinalizer);
}};
this.isInitialized=function(){return sessionContext.initialized;
};
this.requestHandler=function(e,fromHash,currHash,queuedPHEvent){if(sessionContext.phEventQueueing){if(!updateDone&&!queuedPHEvent){phQueue.push({e:e,fromHash:fromHash,currHash:currHash});
return;
}updateDone=false;
}if(fromHash&&fromHash.charAt(0)==="%"){fromHash=decodeURIComponent(fromHash);
}if(currHash&&currHash.charAt(0)==="%"){currHash=decodeURIComponent(currHash);
}var timeNow=now();
$.requestContext=requestContext={fromHash:fromHash,currHash:currHash,timeZero:timeNow,timeSinceLast:timeNow};
requestContext.isNewEmptyPage=(sUtils.pageStructure()==="page-minus-results");
var sepAtfBtf=sUtils.getSepAtfBtf(currHash)==="true";
if(requestContext.isNewEmptyPage){$.requestContext.timeClick=sUtils.getTC(currHash);
if($.requestContext.timeClick&&isNaN($.requestContext.timeClick)){delete $.requestContext.timeClick;
}currHash=sUtils.removeTC(currHash);
currHash=sUtils.removeSepAtfBtf(currHash);
if($.requestContext.timeClick||sepAtfBtf){ph.updateHash(currHash,false,true);
}sessionContext.initRH=sUtils.createEmptyPageInitRH(currHash);
}var isBookmarkPage=false;
if(fromHash===undefined){if(currHash){isBookmarkPage=!requestContext.isNewEmptyPage;
}else{postLoad("");
return;
}}requestContext.isBookmarkPage=isBookmarkPage;
amznJQ.onReady=function(){jqOnReadyArgs.push(arguments);
};
sessionContext.canPrefetch=false;
initGlobals();
sUE.setScope(scopeNamePrefix+ajaxRequestNum);
if(isBookmarkPage){requestContext=$.extend(requestContext,{noScrollToTop:true,hideOtherDivs:true});
}if(sessionContext.ajaxOnCrossAppPage&&!sw.isLoaded()){sw.requestHandler(e,fromHash,currHash);
}var cacheInfo=sCache.getCachedSections(currHash);
var cachedSections=cacheInfo.sections;
var cacheName=cacheInfo.cache;
var hashInCache=sUtils.hasSections(cachedSections);
requestContext=$.extend(requestContext,{waitBuffer:[],fromCache:cacheName});
var missingSections=getMissingSections(cachedSections);
requestContext.sectionsToFetch=missingSections;
handleOnClick();
var url=constructAjaxUrl(fromHash,currHash,missingSections,isBookmarkOrNewEmptyReq());
var debugNoAjax=sessionContext.intReq&&pUtils.hasDebugParam(currHash,"noajax");
var reload=pUtils.getPar(sUtils.reloadre,url)=="1"||debugNoAjax;
requestContext=$.extend(requestContext,{url:url,forceReload:reload,forceReloadReason:reload?(debugNoAjax?pUtils.reasonCode.DEBUG_NOAJAX:pUtils.reasonCode.NOT_SUPPORTED):pUtils.reasonCode.NONE,debugNoAjax:debugNoAjax});
var currParts=sCache.getCacheKeyParts(sCache.getCacheKey(currHash));
if(iss){iss.keyword(sUtils.getKeywordsDisplay(currParts.rh,sUtils.rhkeywordsre));
}var hideOtherDivs=areOtherDivsHidden(fromHash,currHash);
hideChangedContents(fromHash,currHash,missingSections,hideOtherDivs);
if(typeof(resetVDS)=="function"){resetVDS();
}if(hashInCache){requestContext.waitForCache=true;
if(handleHistoryPage()){historyPageUpdateATF();
}else{var cacheCallBackFn=cacheCallBack;
if(requestContext.isNewEmptyPage&&sepAtfBtf){cacheCallBackFn=function(content,reloadCode){cacheCallBack(content,reloadCode);
showProgressAnimation(false);
};
}sCache.getContentViaCallBack(currHash,cacheCallBackFn);
}}if(!sepAtfBtf){showProgressAnimation(hideOtherDivs);
}if(sessionContext.ajaxOnCrossAppPage&&sw.isLoaded()&&!currHash){ph.replace(sessionContext.initPageUrl);
return;
}if(sUtils.isValidHash(currHash)){requestContext.reloadUrl=sUtils.reconstructUrl(requestContext.debugNoAjax?pUtils.removeDebugParam(currHash,"noajax"):currHash);
}else{requestContext.reloadUrl=sessionContext.initPageUrl;
self.warning("requestHandler","bad hash",currHash);
}requestContext.firstByteReceived=false;
var requestKey=sCache.getCacheKey(currHash)+ajaxRequestNum++;
requestContext.streamingXhr=pa.loadStreaming(requestContext.url,requestContext.reloadUrl,isEmptyRequest,ajaxResultsOK,ajaxResultsError,requestKey);
};
this.addAjaxUrlParam=function(key,value){requestContext.url+=("&"+key+"="+value);
};
var getMissingSections=function(availableSections){var missingSecs=[];
for(var i in sections){if($.inArray(sections[i],availableSections)==-1){missingSecs.push(sections[i]);
}}if(missingSecs.length==0){if(handleHistoryPage()){missingSecs=missingSecs.concat(sections);
}else{missingSecs.push(sUtils.sectionName.NONE);
}}return missingSecs;
};
var initGlobals=function(){if(!requestContext.isNewEmptyPage){if(window.onbeforeunload){window.onbeforeunload();
}window.onbeforeunload=function(){};
}window.sxaj=1;
SPUtils.resetEventsLog();
};
var handleHistoryPage=function(){return requestContext.fromCache==sUtils.cacheName.HISTORY;
};
var cacheCallBack=function(content,reloadCode){self.debug("cacheCallBack","size: "+content.length,"status: "+reloadCode);
if(reloadCode!=pUtils.reasonCode.NONE){abortAndReload(reloadCode);
}else{var len=content.length;
for(var i=0;
i<len;
i++){updatePage(content[i]);
}}requestContext.waitForCache=false;
ajaxResultsOK(null,null,pUtils.ajaxReadyState.DONE);
};
var abortAndReload=function(reloadCode){requestContext.forceReload=true;
requestContext.forceReloadReason=reloadCode;
var streamingXhr=requestContext.streamingXhr;
if(streamingXhr){if(streamingXhr.isRunning()){streamingXhr.abort(pUtils.serverCode.ERROR);
}else{streamingXhr.errorReload();
}}};
var historyPageUpdateATF=function(){var content=sCache.getContent(requestContext.currHash);
var len=content.length;
self.debug("historyPageUpdateATF","size: "+len);
for(var i=0;
i<len;
i++){if(content[i].tagId=="FOLD"){requestContext.foldIndexInHistory=i+1;
break;
}var status=updatePage(content[i]);
if(status&&status.handlerCode!=pUtils.handlerCode.OK){abortAndReload(status.reasonCode);
break;
}}};
this.finalizeHistoryATF=function(){setTimeout(function(){if(handleHistoryPage()){historyPageUpdateBTF();
}},10);
};
var historyPageUpdateBTF=function(){var content=sCache.getContent(requestContext.currHash);
var len=content.length;
self.debug("historyPageUpdateBTF","size: "+len);
for(var i=requestContext.foldIndexInHistory;
i<len;
i++){updatePage(content[i]);
}requestContext.waitForCache=false;
ajaxResultsOK(null,null,pUtils.ajaxReadyState.DONE);
};
var hideChangedContents=function(fromHash,currHash,missingSections,hideOtherDivs){if(requestContext.isNewEmptyPage||requestContext.forceReload){return;
}var divsToHide=[];
for(var section in sectionDivsToHide){var jQDivs=$(sectionDivsToHide[section]);
jQDivs.hide();
if(jQDivs&&$.inArray(section,missingSections)!=-1){divsToHide.push(jQDivs);
}}requestContext.divsToHide=divsToHide;
if(hideOtherDivs){$(otherDivsToHide).css("visibility","hidden");
requestContext.otherDivsHidden=true;
}if(!requestContext.noScrollToTop){window.scrollTo(0,0);
}};
this.hidePageContents=function(){for(var section in sectionDivsToHide){var jQDivs=$(sectionDivsToHide[section]);
jQDivs.hide();
}$(otherDivsToHide).css("visibility","hidden");
};
var showProgressAnimation=function(hideOtherDivs){if(requestContext.forceReload){return;
}var domElem;
if(requestContext.isNewEmptyPage){domElem=document.getElementById("page-wrap")||document.getElementById("centerBelow");
}else{domElem=document.getElementById("centerBelow");
}requestContext.spinnerPosition=domElem.id;
insertSpinner(domElem,getHideWidth(hideOtherDivs));
};
var areOtherDivsHidden=function(fromHash,currHash){if(requestContext.isNewEmptyPage){return false;
}var s=sCache,fromParts=s.getCacheKeyParts(s.getCacheKey(fromHash)),currParts=s.getCacheKeyParts(s.getCacheKey(currHash));
return(fromParts.rh!=currParts.rh)||requestContext.hideOtherDivs;
};
var insertSpinner=function(domObj,hideDivWidth){if(domObj.id==requestContext.spinnerPosition&&($("#"+domObj.id+"spacer").length==0)){var jqObj=$(domObj);
spinner.clone().attr("id",domObj.id+"spacer").height(spinnerHeight).width(spinnerWidth).css("left",(hideDivWidth-spinnerWidth)/2).insertAfter(jqObj);
}};
var getHideWidth=function(hideOtherDivs){if(requestContext.isNewEmptyPage){return $("body").width();
}return $("#center").width()-(hideOtherDivs?$("#leftNav").width():0);
};
var updatePage=function(divObj){if(!divObj){return;
}if(divObj.data.type=="TRACKINGINFO"){if(divObj.data.status==="ok"){var status=processTrackingInfo(divObj.data.value);
if(status.handlerCode!=pUtils.handlerCode.OK){return status;
}}}else{pUtils.updatePage(divObj,requestContext,PredictiveConfig,sLogger);
}};
var constructAjaxUrl=function(fromHash,currHash,sections,includeRrid){var url=sUtils.constructAjaxUrl(fromHash,currHash,sections,false);
url+=moveAmabotPrerenderedIntoUrlParam();
if(handleHistoryPage()){url+="&infoOnly=1";
}if(includeRrid){url+=("&rrid="+sessionContext.initRid);
}return url;
};
var isEmptyRequest=function(callBackContext,text,xhrReadyState){var isEmpty=false;
if(pUtils.getPar(sUtils.sectionre,requestContext.url)==sUtils.sectionName.NONE){isEmpty=true;
}else{if(requestContext.forceReload){isEmpty=true;
}}return isEmpty;
};
var ajaxResultsOK=function(callContext,pagelet,loadingStatus){if(requestContext.forceReload){return pUtils.genReloadStatus(requestContext.forceReloadReason);
}if(!requestContext.firstByteReceived&&pagelet){requestContext.firstByteReceived=true;
handleOnFirstByte();
}self.processATFImageLoad();
var bufferingStatus=handleBuffer(callContext,pagelet,loadingStatus);
if(bufferingStatus.handlerCode!=pUtils.handlerCode.OK){return bufferingStatus;
}return processPagelet(callContext,pagelet,loadingStatus);
};
var handleOnClick=function(){self.debug("Click at: "+((requestContext.timeClick||now())-requestContext.timeZero)+"ms.");
self.debug("ON CLICK");
sUE.setUEActivity(true);
if(requestContext.isNewEmptyPage){if(requestContext.timeClick&&((requestContext.timeZero-requestContext.timeClick)<30000)){sUE.setClick(requestContext.timeClick);
}delete requestContext.timeClick;
}else{if(!requestContext.isBookmarkPage){sUE.setClick();
}}if(isPredictiveRequest()||isBookmarkOrNewEmptyReq()){sUE.prepareForNewPageLoad(isBookmarkOrNewEmptyReq());
}};
var handleOnFirstByte=function(){self.debug("FirstByte at: "+(now()-requestContext.timeZero)+"ms.");
self.debug("ON FIRST BYTE");
if(!isPredictiveRequest()&&!isBookmarkOrNewEmptyReq()){sUE.prepareForNewPageLoad(false);
}};
var isBookmarkOrNewEmptyReq=function(){return requestContext.isBookmarkPage||requestContext.isNewEmptyPage;
};
var isPredictiveRequest=function(){return handleHistoryPage()||$.inArray(sUtils.sectionName.ATF,requestContext.sectionsToFetch)==-1;
};
this.processATFImageLoad=function(){if(requestContext.atfImage){requestContext.atfImage.src=requestContext.atfImage.src;
if(pUtils.imgLoaded(requestContext.atfImage)){if(self.doATFImageLoad()){requestContext.atfImage=undefined;
}}}};
this.doATFImageLoad=function(){var status=false;
if(!sUE.atfRecorded()){var atfImage=requestContext.atfImage;
if(atfImage){var atfScript=atfImage.getAttribute("onload");
try{typeof(atfScript)=="function"?atfScript():eval(atfScript);
status=true;
}catch(e){self.error("Invalid JavaScript in image onload: "+e);
}}}else{status=true;
}return status;
};
var processPagelet=function(callContext,pagelet,loadingStatus){var rid,payload;
if(!pagelet){return{"handlerCode":pUtils.handlerCode.IGNORE};
}if(pagelet.trackingInfo){var status=processTrackingInfo(pagelet.trackingInfo);
if(status.handlerCode!=pUtils.handlerCode.OK){return status;
}}else{payload=pagelet[pUtils.getKeys(pagelet)[0]];
if(payload&&payload.data&&payload.data.status=="fatal"){return pUtils.genReloadStatus(pUtils.reasonCode.PAGELET_FATAL);
}if(sessionContext.delayBtfPagelets&&pagelet["raw-auto-left-advertising-1"]){requestContext.delayedPagelets=requestContext.delayedPagelets||[];
requestContext.delayedPagelets.push(function(){updatePage(payload);
});
}else{updatePage(payload);
}}if(loadingStatus==pUtils.ajaxReadyState.DONE){postNewLoad(requestContext.currHash);
postLoad(requestContext.currHash);
}return{"handlerCode":pUtils.handlerCode.OK};
};
var processTrackingInfo=function(trackingInfo){if(!requestContext.isNewEmptyPage){var rid=trackingInfo.rid;
sUE.updateRid(rid);
sLogger.updateRid(rid);
}else{var rid=window.ue.id;
sUE.updateRid(rid);
sLogger.updateRid(rid);
}requestContext.qid=trackingInfo.qid;
var browseLadder=trackingInfo.browseLadder;
var node=trackingInfo.node;
if(browseLadder&&browseLadder!="null"&&node&&node!="null"){sUtils.updateBrowseLadderMap(node,decodeURIComponent(browseLadder));
}if(!requestContext.isNewEmptyPage&&!sessionContext.navHasGatewaySubnav){if(!$.pageContext.node&&trackingInfo.node){pUtils.navShowSubnav();
}else{if($.pageContext.node&&!trackingInfo.node){pUtils.navHideSubnav();
}}}transferAmabotPrerendered($.pageContext,trackingInfo);
trackingInfo.navUpdate=$.pageContext.navUpdate;
$.pageContext=trackingInfo;
if(sessionContext.ajaxOnCrossAppPage){sUE.updateUrl(trackingInfo.sid);
}if(trackingInfo.isApplicationFailure){return pUtils.genReloadStatus(pUtils.reasonCode.FATAL,trackingInfo.redirectUrl);
}if(trackingInfo.isUnsupportedRequest){return pUtils.genReloadStatus(pUtils.reasonCode.NOT_SUPPORTED,trackingInfo.redirectUrl);
}if($.inArray(sUtils.sectionName.ATF,requestContext.sectionsToFetch)<0&&sessionContext.displaySize!=trackingInfo.displaySize){return pUtils.genReloadStatus(pUtils.reasonCode.NOT_SUPPORTED);
}if(!handleHistoryPage()){sessionContext.displaySize=trackingInfo.displaySize;
}return pUtils.genStatus(pUtils.handlerCode.OK);
};
var handleBuffer=function(callContext,pagelet,loadingStatus){var status={"handlerCode":pUtils.handlerCode.OK};
if(requestContext.waitForCache){if(pagelet){var savedArgs={callContext:callContext,pagelet:pagelet,loadingStatus:loadingStatus};
requestContext.waitBuffer.push(savedArgs);
self.debug("handleBuffer: buffering "+pUtils.getKeys(pagelet)[0]+" at: "+(now()-requestContext.timeZero)+"ms.");
}if(loadingStatus==pUtils.ajaxReadyState.DONE){self.debug("handleBuffer: Buffering termination at: "+(now()-requestContext.timeZero)+"ms.");
}status={"handlerCode":pUtils.handlerCode.IGNORE};
}else{var len=requestContext.waitBuffer.length;
for(var i=0;
i<len;
i++){var callArgs=requestContext.waitBuffer[i];
self.debug("handleBuffer: emptying "+pUtils.getKeys(callArgs.pagelet)[0]);
status=processPagelet(callArgs.callContext,callArgs.pagelet,callArgs.loadingStatus);
if(status.handlerCode!=pUtils.handlerCode.OK){break;
}}}return status;
};
var ajaxResultsError=function(callContext,data,appStatus){return appStatus;
};
this.ATFLoaded=function(){if(sessionContext.ueDataEnabled){requestContext.atfImage=$("#atfResults .image img[onload]").get(0);
self.processATFImageLoad();
}};
this.BTFJsLoaded=function(){evalScripts("#search-js-btf, #search-js-btf-external");
};
this.BTRJsLoaded=function(){evalScripts("#search-js-btr");
evalScripts("#centerBelow_ajaxJavascripts");
};
var evalScripts=function(ids){$(ids).children("script").each(function(){eval($(this).html());
});
};
var postNewLoad=function(currHash){var divsToShow=requestContext.divsToHide;
for(var i in divsToShow){divsToShow[i].show();
var spacerToRemove="#"+divsToShow[i].attr("id")+"spacer";
$(spacerToRemove).remove();
}if(!requestContext.divsToShow&&requestContext.spinnerPosition){var spacerToRemove="#"+requestContext.spinnerPosition+"spacer";
$(spacerToRemove).remove();
}if(requestContext.otherDivsHidden){$(otherDivsToHide).css("visibility","visible");
}$.ajaxMissingDivs.clear();
$.pageUpdateJsonData={};
sCache.clearPredictiveCache();
executeAmznJQOnReadyMethods();
sUE.manageLoad();
};
var postLoad=function(currHash){if(requestContext.delayedPagelets){for(var i=0;
i<requestContext.delayedPagelets.length;
i++){requestContext.delayedPagelets[i]();
}requestContext.delayedPagelets=[];
}if(!$.pageContext.node){sessionContext.navHasGatewaySubnav=pUtils.navIsSubnavShown();
}if(!$.pageContext.navUpdate){$.pageContext.navUpdate=pUtils.getStartingNavUpdate();
}if(requestContext.isNewEmptyPage){requestContext.isNewEmptyPage=false;
}cachePageContent((!requestContext.isNewEmptyPage?currHash:""));
rewritePageLinks();
sessionContext.canPrefetch=true;
sLogger.flush();
SPUtils.triggerEvent("searchajax");
self.debug("End of search AJAX. Current Hash="+currHash+".");
if(sessionContext.phEventQueueing){if(phQueue.length){var phEvent=phQueue.shift();
setTimeout(function(){self.requestHandler(phEvent.e,phEvent.fromHash,phEvent.currHash,true);
},0);
}else{updateDone=true;
}}};
var executeAmznJQOnReadyMethods=function(){amznJQ.onReady=jqOnReady;
$.each(jqOnReadyArgs,function(){jqOnReady.apply(amznJQ,this);
});
jqOnReadyArgs=[];
};
var cachePageContent=function(currHash){if(sUtils.pageStructure()!="corr-results"){var predictivePagelets=self.getPageCacheData(PredictiveConfig.divs,true);
var nextPage=sUtils.getPage(!currHash?sessionContext.initPageHash:currHash)+1;
var pagnNextLink=$("#pagnNextLink");
var nextPageRH=pagnNextLink.length?sUtils.getRH(pagnNextLink[0].href):undefined;
predictivePagelets=postProcessPredictive(predictivePagelets);
var overrides={};
overrides.page=nextPage;
if(nextPageRH){overrides.rh=nextPageRH;
}sCache.storeContent(currHash,overrides,predictivePagelets,true);
}var historyRegions;
if(!sUtils.pageStructure()||$.inArray(sUtils.pageStructure(),supportedPages)!=-1){historyRegions=self.getPageCacheData(PageRegionsConfig,false);
}else{historyRegions=self.getUnsupportedPageCacheData();
}sCache.storeContent(currHash,undefined,historyRegions,false);
if(sessionContext.dbgDisplay){amznJQ.available("search-js-ajax-monitor",function(){$.searchAjaxDebug.initAjaxDebug();
sessionContext.ajaxDebugEnabled=1;
});
}};
var rewritePageLinks=function(){if(sessionContext.pagn){$("#pagn a").each(function(){var t=$(this);
ph.linkRW(t.attr("href"),t,sUtils.urlre);
});
$(".SRSBottom a, .SRSTop a").each(function(){var t=$(this);
ph.linkRW(t.attr("href"),t,sUtils.urlre);
});
}if(typeof(setupVDS)=="function"){setupVDS();
}$("#smartAPS_content").find("a").each(function(){var t=$(this);
ph.linkRW(t.attr("data-url"),t,sUtils.urlre,"data-url");
});
$("#smartAPSSortOptions").find(".sortOption").find("a").each(function(){var t=$(this);
ph.linkRW(t.attr("href"),t,sUtils.urlre);
});
if(sessionContext.sort){$("#sort").attr("onchange","").change(function(){$("#searchSortForm").submit();
});
$("#searchSortForm").submit(function(){var $form=$(this);
var sortHash=sUtils.computeHashForUrl($form.attr("action")+"?"+$form.serialize());
ph.advance(sortHash);
return false;
});
var sorta=$("#sortByEx_table .sortByAtfOption a");
sorta.add("#sortByBtf_content a").each(function(){var t=$(this);
if(ph.linkRW(t.attr("href"),t,sUtils.urlre)){t.click(function(){var pop=$("#kindOfSortHotspot");
pop.trigger("closepopover");
pop.removeAmazonPopoverTrigger();
});
}});
}if(sessionContext.refinementsOnTop){var refinementRewriteSelector=$("#refinementsOnTop div ul li a");
refinementRewriteSelector.each(function(){var t=$(this);
if(!t.find(".seeMore").length&&!t.parent(".subgroup").length){ph.linkRW(t.attr("href"),t,sUtils.urlre);
}});
}if(sessionContext.luxuryRefinementsOnTop){var refinementRewriteSelector=$("div .refinementContent ul li a");
refinementRewriteSelector.each(function(){var t=$(this);
if(!t.find(".seeMore").length&&!t.parent(".subgroup").length){ph.linkRW(t.attr("href"),t,sUtils.urlre);
}});
}if(sessionContext.primeRefinementOnTop||sessionContext.luxuryRefinementsOnTop){var refinementOnTopbarRewriteSelector=$("#topBar .topBarPrime a");
refinementOnTopbarRewriteSelector.each(function(){ph.linkRW($(this).attr("href"),$(this),sUtils.urlre);
});
}if(sessionContext.leftNav){if(sessionContext.testpreview==1){if(!$("#results-preview").length){$("#center").before("<div id='results-preview'/>");
}$("#refinements").find("ul").find("li a").each(function(){var t=$(this);
refinementLinkPreview(t);
});
}else{var refinementRewriteSelector=$("#refinements ul li a");
refinementRewriteSelector.each(function(){var t=$(this);
if(!t.find(".seeMore").length&&!t.parent(".subgroup").length){ph.linkRW(t.attr("href"),t,sUtils.urlre);
}});
}var decodedBaseRH=decodeURIComponent(sUtils.extractBaseRH());
$("#breadCrumb a").each(function(){var t=$(this);
var href=t.attr("href");
if(href.match(sUtils.surlre)){ph.linkRW(t.attr("href"),t,sUtils.urlre);
}});
$(".product .store a, #kindOfSort_content li a , .topCategories a, #topRefinementsContainer a, .brscGroup a, .searchOtherStores a, .product .brand a, .categoryHelperItem a").each(function(){var t=$(this);
var href=t.attr("href");
if(href.match(sUtils.surlre)){ph.linkRW(t.attr("href"),t,sUtils.urlre);
}});
$("form#attrSuggestForm").submit(function(){var $form=$(this);
var h=sUtils.computeHashForUrl($form.attr("action")+"?"+$form.serialize());
ph.advance(h);
return false;
});
}if(sessionContext.keyword){predictionModel.limit=sessionContext.predictionLimit||1,predictionModel.predictions=0;
predictionModel.entryPauseAllowance=sessionContext.entryPause?sessionContext.entryPause.limit:0;
issModel={form:$("form[name=site-search]"),min:sessionContext.issMin||3,threshold:sessionContext.issTime,count:sessionContext.issCount};
if(!sessionContext.keywordSubmitHooked){var f=selectPredictionModel(sessionContext.iss);
if(sessionContext.searchHistory){f=searchHistoryMergingPredictionModel(f);
}if(sessionContext.cp){f=clickPredictionExtendedPredictionModel(f);
}if(iss&&iss.suggest){iss.submit(submit);
iss.suggest(f);
}else{issModel.form.submit(submit);
searchBar().keypress(issAdapter(f));
}if(sessionContext.entryPause&&sessionContext.entryPause.limit){searchBar().keypress(entryPauseDetecter);
}sessionContext.keywordSubmitHooked=true;
}$("#relatedSearches a").each(function(){var t=$(this);
ph.linkRW(t.attr("href"),t,sUtils.urlre);
});
$("#alternativeSearches .alternativeKeywords a").each(function(){ph.linkRW($(this).attr("href"),$(this),sUtils.urlre);
});
$("#didYouMean a").each(function(){var t=$(this);
var href=t.attr("href");
if(href.indexOf("a9_asc_1")<0&&href.indexOf("a9_asi_1")<0){ph.linkRW(t.attr("href"),t,sUtils.urlre);
}});
}if(sessionContext.cp){clickModel=$.extend({cnt:0,limit:3,time:0},sessionContext.cp);
}if(requestContext.reloadUrl){$("div.entity a").each(function(){var t=$(this),href=t.attr("href");
if(href.match(sUtils.wikiurlre)){var sparam="searchSource="+encodeURIComponent(requestContext.reloadUrl);
sparam=href.indexOf("?")==pUtils.NOTFOUND?"?":"&"+sparam;
var i=href.indexOf("#");
if(i==pUtils.NOTFOUND){t.attr("href",href+sparam);
}else{t.attr("href",href.substring(0,i-1)+sparam+href.substring(i));
}}});
}if(requestContext.reloadUrl){$("#hms-response-form input[name='url']").each(function(){var t=$(this);
t.attr("value",requestContext.reloadUrl);
});
}if(sessionContext.eb){editKeyword=function(kw){$.searchAjax.editKeyword(kw);
};
removeKeyword=function(){$.searchAjax.removeKeyword();
};
}addKeyword=function(kw){$.searchAjax.addKeyword(kw);
};
};
function issAdapter(f){return function(e){f(e.keyCode);
};
}function eligibleForKeyword(form){var sc=sessionContext,alias=sc.searchAlias,node=sc.node;
if(!sc.keyword||!alias||!node){return false;
}var nextNode,keywords,root=sc.rootNode,url=form.attr("action")+"?"+form.serialize(),decodedUrl=decodeURIComponent(url),nextSearchAlias=sUtils.getSearchAlias(decodedUrl);
keywords=sUtils.getKeywords(url);
if(nextSearchAlias=="aps"&&sUtils.isEmptySearch(keywords)){return false;
}return{keyword:keywords,url:url};
}function selectPredictionModel(i){return[predictStroke,predictTime,predictWord,function(){}][(i>0&&i<4)?i-1:3];
}function searchHistoryMergingPredictionModel(f){return function(kw,sl){if(!issModel.origCount){issModel.origCount=issModel.count;
}issModel.count=issModel.origCount;
var searchHistory=sessionContext.searchHistory;
for(var i=0;
i<searchHistory.length;
i++){var historicalSearch=searchHistory[i];
if(historicalSearch.indexOf(kw)==0){var mergedSL=sl.slice();
var hSL={keyword:historicalSearch,sc:false,sgIndex:0};
mergedSL.unshift(hSL);
issModel.count++;
return f(kw,mergedSL);
}}return f(kw,sl);
};
}function giveIssDivCP(e,s,dropdownAlias){var alias=s.alias||dropdownAlias;
$.data(e[0],"phPS","?rh="+sUtils.computeKeywordsRH(s.keyword,alias,"",""));
}function clickPredictionExtendedPredictionModel(f){return function(kw,sl){var res=f(kw,sl),dropdownAlias=iss.searchAlias(),i,j,e,xcat;
for(i=0;
i<sl.length;
i++){e=$("#issDiv"+i);
giveIssDivCP(e,sl[i],dropdownAlias);
xcat=sl[i].xcat;
if(xcat){for(j=0;
j<xcat.length;
j++){e=$("#issDiv"+i+"-"+j);
giveIssDivCP(e,xcat[j],dropdownAlias);
}}}return res;
};
}function eligibleForPrediction(){if(!canPrefetch()){return false;
}if(predictionModel.predictions>=predictionModel.limit){return false;
}var ctx=eligibleForKeyword(issModel.form);
if(!ctx){return false;
}return true;
}function eligibleForISSPrediction(key,sl,noMin){if(!eligibleForPrediction()){return false;
}if(!sl){if(key<=40||key==45||key==46){return false;
}key=ctx.keyword+String.fromCharCode(key);
}if(!noMin&&key.length<issModel.min){return false;
}return decodeURIComponent(key);
}function doPredict(kw,sl,noMin){setTimeout(function(){if(kw=eligibleForISSPrediction(kw,sl,noMin)){predict(sl);
}},0);
}function predictStroke(kw,sl){doPredict(kw,sl);
}function predictTime(kw,sl){var t=now();
if(issModel.firstTime){if(t-issModel.firstTime>=issModel.threshold){doPredict(kw,sl);
}}else{issModel.firstTime=t;
}}function predictWord(kw,sl){}function getSuggestion(n,sl,k){if(!sl){k=$("#issDiv"+n).html();
if(k){k=k.replace(/ <span>.*<\/span>/,"");
k=k.replace(/<\/?b>/g,"");
}}else{if(sl.length>n&&sl[n]){k=sl[n].keyword;
}}return k;
}function getSuggestions(inx,len,sl,k){k=[];
if(inx>=0&&len>=0&&sl.length>0){while(inx<sl.length&&len>0){if(!sl||!sl[inx].categoryName){k.push(getSuggestion(inx,sl));
len--;
}inx++;
}}return k;
}function getPredictionQueries(k){var overrides=[],len=k.length,override={};
if(!iss){return overrides;
}var selectedAlias=iss.searchAlias();
var selectedNode=iss.searchNode?iss.searchNode():undefined;
var selectedMerchant=iss.merchant?iss.merchant():undefined;
for(var i=0;
i<len;
i++){override={rh:sUtils.computeKeywordsRH(sUtils.prepareKeywordsForRH(k[i]),selectedAlias,selectedNode,selectedMerchant)};
if(iss.encoding){var enc=iss.encoding();
if(enc&&enc.length==2){override[enc[0]]=encodeURI(enc[1]);
}}else{var encInput=issModel.form.find("input[name^='__mk_']");
if(encInput.length){override[encInput.attr("name")]=encodeURI(encInput.val());
}}var imageLayoutParam=document.getElementById("loparam");
if(imageLayoutParam){override[loparam.getAttribute("name")]=loparam.getAttribute("value");
}if(selectedMerchant){override["me"]=selectedMerchant;
}overrides.push(override);
}return overrides;
}function predict(sl,k){var nRem=predictionModel.limit-predictionModel.predictions;
var n=Math.floor(nRem/issModel.count)?issModel.count:nRem;
k=getSuggestions(0,n,sl,k);
if(!k||!k.length){return;
}storePredictions(k,"iss");
}function rewriteLanguageLink(url){$("a.navCrossshopYALink").each(function(){var t=$(this);
var keywords=sUtils.getKeywords(url);
var href=t.attr("href");
href=href.replace(/field-keywords=([^&]*)/,"field-keywords="+keywords);
href=href.replace(/k%3A([^&]*)/,"k%3A"+keywords);
t.attr("href",href);
});
}function submit(e){var ctx=eligibleForKeyword($(this)),h;
if(ctx){var selectedAlias=iss.searchAlias();
var selectedNode=iss.searchNode?iss.searchNode():undefined;
var selectedMerchant=iss.merchant?iss.merchant():undefined;
h=sUtils.computeHash(ctx.url)+"&rh="+sUtils.computeKeywordsRH(ctx.keyword,selectedAlias,selectedNode,selectedMerchant);
ph.advance(h);
rewriteLanguageLink(ctx.url);
searchBar().blur();
}return !ctx;
}function predictPaste(e){if(!eligibleForPrediction()){return;
}var text=searchBar().val();
storePredictions([text],"pst");
}function entryPauseDetecter(e){predictionModel.entryPauseDecay=now()+sessionContext.entryPause.time;
if(!predictionModel.entryPauseTimer&&(predictionModel.entryPauseAllowance>0)){setDeferingEntryPauseTimer(sessionContext.entryPauseTime);
}}function setDeferingEntryPauseTimer(t){predictionModel.entryPauseTimer=setTimeout(predictEntryPause,t);
}function predictEntryPause(){var t=now();
if(t>predictionModel.entryPauseDecay){predictionModel.entryPauseTimer=null;
var text=searchBar().val().replace(/^\s\s*/,"").replace(/\s\s*$/,"");
var numPredictions=storePredictions([text],"ep");
predictionModel.entryPauseAllowance-=numPredictions;
}else{setDeferingEntryPauseTimer(t-predictionModel.entryPauseDecay);
}}function clickPredictionTargets(cp){var target=$(cp.target),id=target.attr("id"),elem,item,tmp,option,overrides=[],override;
if(id==="sort"||id==="sortBy"){elem=$("#sort");
tmp="option[value='-price']";
item=e.find(tmp+":selected");
if(item&&item.length){item=elem.find("option[value='relevancerank']");
if(item&&item.length){option="relevancerank";
}}else{item=elem.find(tmp);
if(item&&item.length){option="-price";
}}if(option){override={};
$("#searchSortForm").serializeArray().each(function(i,e){override[e.name]=e.value;
});
override.sort=option;
overrides.push(override);
}}else{if($.data(target[0],"phPS")||((tmp=target.attr("href"))&&tmp&&tmp[0]==="#")){elem=target;
}else{item="a[href^='#'],a[data-phPS]";
tmp=target.find(item);
if(!tmp||!tmp.length){tmp=target.parents(item);
}if(tmp&&tmp.length==1){elem=tmp;
}}if(elem){tmp=$.data(elem[0],"phPS")||elem.attr("href").substring(1);
if(tmp){overrides.push(tmp);
}}}return overrides;
}function predictClick(e,cp){if(!canPrefetch()||clickModel.cnt>=clickModel.limit){return;
}if(cp.t-(new Date()).getTime()<clickModel.time){return;
}clickModel.cnt+=sCache.loadPredictiveContent(requestContext.currHash,clickPredictionTargets(cp),"clk",postProcessPredictive);
}function storePredictions(keywords,predictMode){var overrides=getPredictionQueries(keywords);
var numPredictions=sCache.loadPredictiveContent(requestContext.currHash,overrides,predictMode,postProcessPredictive);
predictionModel.predictions+=numPredictions;
return numPredictions;
}var refinementLinkPreview=function(a){a.attr("onMouseOver","jQuery.searchAjax.showPreview(this);");
a.attr("onMouseOut","document.getElementById('results-preview').innerHTML='';");
};
this.showPreview=function(a){var href=$(a).attr("href");
href=href.replace(/gp\/search/,"mn/search/ajax");
href+="&pagelets=results-preview:num=5:ref=sr_pr";
var content=sCache.getGeneralContent(href,"pre",true);
var len=content.length;
if(len>0){for(var i=0;
i<len;
i++){if(content[i].tagId=="results-preview"){updatePage(content[i]);
break;
}}}else{jQuery.ajax({"type":"GET","url":href,"dataType":"html","success":function(data,status){processPreview(href,data);
}});
}};
var processPreview=function(href,response){var out=response.split("&&&");
var dataObj={};
for(var i=1;
i<out.length;
i++){try{dataObj=eval("("+out[i]+")");
}catch(e){self.error("Invalid JSON response: "+out[i]);
}var divObj=dataObj[pUtils.getKeys(dataObj)[0]];
if(divObj.tagId=="results-preview"){var cacheData=[];
cacheData.push(divObj);
sCache.storeGeneralContent(href,{},"pre",cacheData,true);
updatePage(divObj);
break;
}}return true;
};
this.preparePredictiveElement=function(id,element){if(element){var m=element.match(pUtils.commentre);
if(m&&m.length==2){element=m[1];
var n=element.match(pUtils.idre);
if(n&&n.length==2){element=($.trim(m[1]));
id=n[1];
}}}else{element="";
id="";
}return{"id":id,"element":element};
};
var postProcessPredictive=function(contents){$.each(contents,function(i,content){if(content&&content.tagId=="atfResults"){sUtils.precacheImages(content.data.value);
if(sessionContext.dedupePredictiveATF){var atfAsins=sUtils.getAsins(content.data.value).join();
if(sessionContext.dbgAtfAsin){atfAsins+=(","+sessionContext.dbgAtfAsin);
}var addAtfParam="$.searchAjax.addAjaxUrlParam('atfAsins', '"+atfAsins+"');";
contents.push(pUtils.constructPageletData("","JAVASCRIPT",addAtfParam));
}return false;
}});
return contents;
};
this.prepareHistoryElement=function(id,element){if(element&&(id=="leftNav"||id=="centerBelowExtra")){var domObj=document.getElementById(id);
var innerHtml=pUtils.removeElementFromDom(domObj,"advertisingTable",".advertisingTable iframe");
var preparedHtml=pUtils.tagStart(domObj)+innerHtml+pUtils.tagEnd(domObj);
return preparedHtml;
}return element;
};
this.getPageCacheData=function(elemsConfig,isPredictive){var cacheData=[];
if(sessionContext.correctedResultsAjax){cacheData.push(pUtils.constructPageletData("","JAVASCRIPT","jQuery.searchAjax.checkAndInstallSearchSkeleton('"+$.pageContext.searchSkeletonKey+"');"));
}for(var i in elemsConfig){var id=elemsConfig[i].id;
var element=pUtils.elementHtml(id);
if(element){if(isPredictive){var predictiveElem=self.preparePredictiveElement(id,element);
id=predictiveElem.id;
element=predictiveElem.element;
}else{element=self.prepareHistoryElement(id,element);
}}cacheData.push(pUtils.constructPageletData(id,"HTML",element));
var js=elemsConfig[i].js;
if(js){for(var j in js){cacheData.push(pUtils.constructPageletData("","JAVASCRIPT",js[j]));
}}}if($.pageContext.navUpdate){cacheData.push(pUtils.constructPageletData("","JAVASCRIPT","jQuery.searchAjax.navUpdate('"+pUtils.escapeJSON($.pageContext.navUpdate)+"');"));
}return cacheData;
};
this.getUnsupportedPageCacheData=function(){var cacheData=[];
cacheData.push(pUtils.constructPageletData("","TRACKINGINFO",{"isUnsupportedRequest":"true"}));
return cacheData;
};
function canPrefetch(){return sessionContext.canPrefetch;
}this.printStats=function(){var sessionContextDump=sessionContext.ajaxDebugEnabled?$.searchAjaxDebug.dump(sessionContext):"";
return"The session context object <br> "+sessionContextDump;
};
this.bcKwForward=function(func,kw){ph.advance(func(kw).replace(/^\/gp\/search|\/s/,""));
};
this.editKeyword=function(kw){this.bcKwForward(normalizedURL,kw);
};
this.removeKeyword=function(){this.bcKwForward(normalizedURL);
};
this.addKeyword=function(kw){this.bcKwForward(normalizedURLSearch,kw);
};
this.storeSearchSkeleton=function(skeletonKey,skeleton){sessionContext.searchSkeletons=sessionContext.searchSkeletons||{};
sessionContext.searchSkeletons[skeletonKey]=skeleton;
};
this.checkAndInstallSearchSkeleton=function(skeletonKey){if($.pageContext.searchSkeletonKey==skeletonKey){return;
}if(!sessionContext.searchSkeletons||!sessionContext.searchSkeletons[skeletonKey]){return;
}$("#main").replaceWith(sessionContext.searchSkeletons[skeletonKey]);
$.pageContext.searchSkeletonKey=skeletonKey;
};
this.navUpdate=function(navUpdate){if(typeof navUpdate!=typeof""){navUpdate=pUtils.stringify(navUpdate);
}if($.pageContext.navUpdate==navUpdate){return;
}$.pageContext.navUpdate=navUpdate;
pUtils.reflowThen(function(){setTimeout(function(){uet("bb","searchAjax-navUpdate",{wb:1});
jQuery.pageUtils.navUpdate(navUpdate);
uex("ld","searchAjax-navUpdate",{wb:1});
},20);
});
};
this.addAmabotPrerendered=function(newOne){if(!$.pageContext){$.pageContext={};
}if(!$.pageContext.amabotPrerendered){$.pageContext.amabotPrerendered=[];
}$.pageContext.amabotPrerendered.push(newOne);
};
var transferAmabotPrerendered=function(oldPageContext,newPageContext){if(!oldPageContext||!oldPageContext.amabotPrerendered){return;
}if(!newPageContext.amabotPrerendered){newPageContext.amabotPrerendered=oldPageContext.amabotPrerendered;
}else{$.each(oldPageContext.amabotPrerendered,function(i,e){newPageContext.amabotPrerendered.push(e);
});
}delete oldPageContext.amabotPrerendered;
};
var moveAmabotPrerenderedIntoUrlParam=function(){var amabotPrerendered=$.pageContext?$.pageContext.amabotPrerendered:undefined;
if(!amabotPrerendered){return"";
}var arg="";
$.each(amabotPrerendered,function(i,e){if(!e||!e.rid||!e.selections||!e.selections.length){return;
}arg+=e.rid+":";
$.each(e.selections,function(ii,selId){if(!selId){return;
}arg+=selId+((ii!=(e.selections.length-1))?",":"");
});
arg+=((i!=amabotPrerendered.length-1)?".":"");
});
delete $.pageContext.amabotPrerendered;
if(arg){arg="&amabotSelections="+arg;
}return arg;
};
};
amznJQ.declareAvailable("search-ajax");
});
});
});
});
});
