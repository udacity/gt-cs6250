amznJQ.available("jQuery",function(){amznJQ.available("search-js-autocomplete",function(){var $=jQuery;
if(!window.amzn){window.amzn={};
}if(!amzn.sx){amzn.sx={};
}if(!amzn.sx.sabc){amzn.sx.sabc={};
}if(!amzn.sx.utils){amzn.sx.utils={};
}var sabcNS=amzn.sx.sabc;
var utilsNS=amzn.sx.utils;
utilsNS.indexOf=utilsNS.indexOf||function(arr,val){for(var i=0;
i<arr.length;
i++){if(arr[i]===val){return i;
}}return -1;
};
utilsNS.getLoggers=utilsNS.getLoggers||function(levelParam){var levels=["debug","error","warn","info"];
var levelEnabled=location.href.match("[?#&]"+levelParam+"=("+levels.join("|")+")");
levelEnabled=levelEnabled?levelEnabled[1]:undefined;
levelEnabled=utilsNS.indexOf(levels,levelEnabled);
var loggers={};
$.each(levels,function(i,level){loggers[level]=(levelEnabled>=0&&levelEnabled<=i)?function(msg){if(console&&console[level]){console[level](msg);
}else{if(console&&console.log){console.log(level+" : "+msg);
}}}:function(msg){};
});
return loggers;
};
sabcNS.Controller=function(allowance,emptyPageOnFocus,sabcAlways,minKeys,nonRemotedAliases,searchHistory){searchHistory=searchHistory||[];
var self=this,loggers=utilsNS.getLoggers("sabcLogging"),navbar=$("#navbar"),searchTB=$("#twotabsearchtextbox"),refTagMatcher=/(\/s)?(\/ref=nb_sb_.*)/i,imgre=/<img [^>]*[\/]?>/gi,srcre=/src=\\\"([\S]*?)\\\"/i,fallbackRefTag="/ref=nb_sb_noss",events={},LD="loading",FN="done",NG="failed",COM="committed",TX="transitioned",ajaxWorkers=[],spinnerInserted;
function hideAllButNavBar(){var elems=[navbar];
for(var p;
(p=elems[0].parent());
){elems.unshift(p);
if(p[0].tagName.toLowerCase()=="body"){break;
}}while(elems.length!=1){var p=elems.shift();
p.children().each(function(i,e){e=$(e);
if(e[0]==elems[0][0]){return;
}e.hide();
});
}}function insertSpinner(){if(spinnerInserted){return;
}navbar.append("<div class='loadingSpinner'>&nbsp;</div>");
spinnerInserted=true;
}function canSupportAlias(alias){return(alias&&(utilsNS.indexOf(nonRemotedAliases,alias)==-1));
}function makeEmptyPageEventName(alias){return"emptyPage_"+alias;
}function makePredictiveATFEventName(alias,keywords){return"predictiveATF_"+alias+"_"+encodeURIComponent(keywords);
}function getMagicEncoding(){var magic=iss.encoding();
return magic?magic[0]+"="+encodeURIComponent(magic[1])+"&":"";
}function getRefTagFromSearchForm(searchForm){var action=searchForm.attr("action");
if(!action){return fallbackRefTag;
}var refTagMatch=action.match(refTagMatcher);
if(!refTagMatch||(refTagMatch.length!=3)){fallbackRefTag;
}return refTagMatch[2];
}function getSPrefixUrlParam(prefix,alias){var prefixElems=$("#issprefix");
if(prefixElems.length){var value=prefixElems.attr("value");
if(value){return encodeURIComponent(value).replace(/(%20|\s)/g,"+");
}}if(prefix&&alias){return encodeURIComponent(prefix+","+alias).replace(/(%20|\s)/g,"+");
}return undefined;
}function makeEmptyPageURL(alias){return"/s/ref=nb_sb_sabc?"+getMagicEncoding()+"url="+escape("search-alias="+alias)+"&pageMinusResults=1"+"&suo="+(+new Date);
}function makeAjaxSearchHashParams(refTag,prefix,alias,keywords,separateAtfBtfRequests,clickTime){separateAtfBtfRequests=separateAtfBtfRequests?"true":"false";
var rh=escape("i:"+alias)+escape(",k:")+encodeURIComponent(keywords);
prefix=getSPrefixUrlParam(prefix,alias);
return"#"+refTag+"?"+getMagicEncoding()+"url="+escape("search-alias="+alias)+"&field-keywords="+encodeURIComponent(keywords)+(prefix?"&sprefix="+prefix:"")+"&rh="+rh+"&sepatfbtf="+separateAtfBtfRequests+"&tc="+clickTime;
}function makeNormalSearchURL(refTag,prefix,alias,keywords){prefix=getSPrefixUrlParam(prefix,alias);
return"/s"+refTag+"?"+getMagicEncoding()+"url="+escape("search-alias="+alias)+"&field-keywords="+encodeURIComponent(keywords)+(prefix?"&sprefix="+prefix:"");
}function transitionPage(href){events[TX]={eventName:TX};
abortAllRunningAjaxWorkers();
location.href=href;
}function eventCollector(){if(events[TX]){loggers.debug("event received after transition already effected - no action");
return false;
}var committedEvent=events[COM];
if(!committedEvent){loggers.debug("event received before search committed - no action");
return false;
}var refTag=committedEvent.refTag;
var alias=committedEvent.alias;
var keywords=committedEvent.keywords;
var clickTime=committedEvent.clickTime;
var emptyPageEvent=events[makeEmptyPageEventName(alias)];
var predictiveATFEvent=events[makePredictiveATFEventName(alias,keywords)];
var prefix=predictiveATFEvent&&predictiveATFEvent.prefix;
if(!emptyPageEvent||emptyPageEvent.status===NG||(predictiveATFEvent&&predictiveATFEvent.status===NG)){loggers.debug("ajax failed - revert to normal search");
transitionPage(makeNormalSearchURL(refTag,prefix,alias,keywords));
return false;
}if(emptyPageEvent.status===LD||(predictiveATFEvent&&predictiveATFEvent.status===LD)){if(!sabcAlways&&emptyPageEvent.status===LD&&!predictiveATFEvent){loggers.debug("abandoning emptyPage loading - transitioning to normal search");
transitionPage(makeNormalSearchURL(refTag,prefix,alias,keywords));
return false;
}else{loggers.debug("ajax still in-flight - no action");
return true;
}}if(predictiveATFEvent&&predictiveATFEvent.status===FN){loggers.debug("predictive hit - transitioning to cached atf search");
transitionPage(emptyPageEvent.url+makeAjaxSearchHashParams(refTag,prefix,alias,keywords,true,clickTime));
return false;
}if(sabcAlways){loggers.debug("prediction not run or missed - transitioning to cached empty search");
transitionPage(emptyPageEvent.url+makeAjaxSearchHashParams(refTag,prefix,alias,keywords,false,clickTime));
return false;
}else{loggers.debug("prediction not run or missed - transitioning to normal search");
transitionPage(makeNormalSearchURL(refTag,prefix,alias,keywords));
return false;
}}function logEvent(event){var eventName=event.eventName;
var logger=(event.status==NG?loggers.error:loggers.debug);
logger(eventName+" is now "+((typeof JSON!="undefined")?JSON.stringify(event):event));
}function doEventSettingAjaxPrefetch(event,url,postProcessor){if(events[TX]){loggers.debug("transition already effected - no action");
return;
}if(allowance==0){loggers.debug("ajax for "+eventName+" will not be run because prefetch allowance is used up");
return;
}var eventName=event.eventName;
event.url=url;
loggers.debug("ajaxing in "+eventName+" for "+url);
var worker=$.ajax({url:event.url,dataType:"text",cache:true,timeout:8*1000,type:"get",success:function(data,status,xhr){event.status=FN;
logEvent(event);
eventCollector();
if(postProcessor){postProcessor(event,url,data,status);
}},error:function(data,status,xhr){event.status=NG;
logEvent(event);
eventCollector();
}});
ajaxWorkers.push([worker,eventName]);
event.status=LD;
logEvent(event);
allowance--;
}function extractImgSrc(data){var imgs=data?data.match(imgre):null;
if(!imgs){return[];
}var srcs=[];
$.each(imgs,function(){var m=this.match(srcre);
if(m&&m.length==2&&$.inArray(m[1],srcs)==-1){srcs.push(m[1]);
}});
return srcs;
}function imagePrefetcher(event,url,data,status){if(events[TX]){return;
}var imgs=extractImgSrc(data);
if(imgs&&imgs.length){if($.browser.msie){var html="";
$.each(imgs,function(i,val){html+='<img src="'+val+'"/>';
loggers.debug("image precache - "+val);
});
$('<div id="sabcPrecachedImages">'+html+"</div>").appendTo($(window.document.body)).hide();
}else{$.each(imgs,function(i,val){var imgObj=new Image();
imgObj.src=val;
loggers.debug("image precache - "+val);
});
}}}function abortAllRunningAjaxWorkers(){while(ajaxWorkers.length){var workerRecord=ajaxWorkers.pop();
var worker=workerRecord[0];
var eventName=workerRecord[1];
if(worker.readyState!=4){loggers.debug("aborting ajax request for the "+eventName+" event");
worker.abort();
}}}function loadEmptyPage(alias){var eventName=makeEmptyPageEventName(alias);
if(events[eventName]){loggers.debug("loadEmptyPage already called for the "+alias+" alias");
return;
}events[eventName]={eventName:eventName};
doEventSettingAjaxPrefetch(events[eventName],makeEmptyPageURL(alias));
loggers.debug("loadEmptyPage for "+alias+" alias now running aynchronously - watch for the "+eventName+" event to be updated");
}function loadPredictiveAtf(prefix,alias,keywords){var eventName=makePredictiveATFEventName(alias,keywords);
if(events[eventName]){loggers.debug("loadPredictiveAtf already called for the "+alias+" alias and "+keywords+" keywords");
return;
}events[eventName]={eventName:eventName,prefix:prefix};
var rh=escape("i:"+alias)+escape(",k:")+encodeURIComponent(keywords);
var url="/mn/search/ajax"+"?rh="+rh+"&fromHash=undefined"+"&section=ATF"+"&fromApp=undefined"+"&fromPage=page-minus-results"+"&version=2"+"&ajp=iss";
if($.browser.msie){url+="&asScript=1"+"&reqKey="+encodeURIComponent("*1*"+escape("i:"+alias)+escape(",k:")+encodeURIComponent(keywords).replace(/(%20|\s)/g,"+")+"*null*undefined*0pred")+"&try=0";
}doEventSettingAjaxPrefetch(events[eventName],url,imagePrefetcher);
loggers.debug("loadPredictiveATF for "+alias+" alias and "+keywords+" keywords now running aynchronously - watch for the "+eventName+" event to be updated");
}function bindSearchBoxFocus(){searchTB.focus(function(){var alias=iss.searchAlias();
if(!canSupportAlias(alias)){return;
}loadEmptyPage(alias);
});
}function bindSearchBoxKeydown(){searchTB.keydown(function(e){var alias=iss.searchAlias();
if(!canSupportAlias(alias)){return;
}loadEmptyPage(alias);
});
}function bindSearchBoxKeypress(){if(!searchHistory||!searchHistory.length){return;
}searchTB.keypress(function(e){var target=e.currentTarget?e.currentTarget:e.srcElement,term=target.value+String.fromCharCode(e.keyCode);
if(term.length<minKeys){return;
}var keywords=undefined;
for(var i=0;
i<searchHistory.length;
i++){if(searchHistory[i].indexOf(term)==0){keywords=searchHistory[i];
break;
}}if(!keywords){return;
}var alias=iss.searchAlias();
if(!canSupportAlias(alias)){return;
}loadPredictiveAtf(term,alias,keywords);
});
}function bindNavBarAliasSelection(){$("#searchDropdownBox").change(function(){var alias=iss.searchAlias();
if(canSupportAlias(alias)){loadEmptyPage(alias);
}});
}function bindNavBarCommit(){iss.submit(function(e){loggers.debug("iss submit event received");
var searchForm=$(this);
var refTag=getRefTagFromSearchForm(searchForm);
var alias=iss.searchAlias();
var keywords=iss.keyword();
if(!canSupportAlias(alias)){loggers.debug("the "+alias+" is not supported in Illuminati yet");
return true;
}if(!keywords){loggers.debug("no sabc for keywordless searches");
return true;
}events[COM]={eventName:COM,refTag:refTag,alias:alias,keywords:keywords,clickTime:+new Date};
if(eventCollector()){hideAllButNavBar();
insertSpinner();
}return false;
});
}function startPredictingFromISS(){iss.suggest(function(term,suggestions){if(!suggestions||!suggestions.length){return;
}if(term.length<minKeys){return;
}var topSuggestion=suggestions[0];
var alias=topSuggestion.alias||iss.searchAlias();
var keywords=topSuggestion.keyword;
if(canSupportAlias(alias)){loadEmptyPage(alias);
loadPredictiveAtf(term,alias,keywords);
}});
}function fixSearchHistory(){if(!searchHistory||!searchHistory.length){return;
}var i,j,term,m;
for(i=0;
i<searchHistory.length;
i++){term=searchHistory[i];
m=term.match(/\uff3cu([0-9a-fA-F]{4})/g);
for(j=0;
j<(m?m.length:0);
j++){term=term.replace(m[j],String.fromCharCode(parseInt(m[j].substr(2),16)));
}searchHistory[i]=term;
}}fixSearchHistory();
if(emptyPageOnFocus){bindSearchBoxFocus();
}bindSearchBoxKeydown();
bindSearchBoxKeypress();
bindNavBarAliasSelection();
bindNavBarCommit();
startPredictingFromISS();
};
amznJQ.declareAvailable("search-sabc");
});
});
